// Never Forget: Comments can "lie", but code not so much ;P
// -----------
// Information
// -----------
BACKUP ~./backup~ // %MOD_FOLDER% doesn't work here
AUTHOR ~Incrementis (incrementis@gmail.com)~
VERSION ~v0.15.1~
AUTO_EVAL_STRINGS// This will prevent the need of EVAL for string variables


// --------------
// Initialization
// --------------
ALWAYS 
	// LIBRARY INCLUDES(Don't touch these)
	// -----------------------------------
	INCLUDE ~%MOD_FOLDER%/lib/dynArrayFunctionalities.tpa~
	INCLUDE ~%MOD_FOLDER%/lib/dialogTlkFunctionalities.tpa~	
	
END// End of "ALWAYS"


// ---------
// Languages
// ---------
LANGUAGE
	~English~	// Language
	~en_US~		// Directory
LANGUAGE
	~Deutsch~	
	~de_DE~	


// ---------------------------------------------------
// Install "IEEE Player Character Voice Installer" Mod
// ---------------------------------------------------
BEGIN ~Vox Demo BG:EE~
// TODO: Activate line of code to copy sound files!
//COPY ~%MOD_FOLDER%/sounds~ ~lang/%LANGUAGE%/sounds~


// GLOBAL INCLUDES(Don't touch these, except commenting out "CheckTlk.tpa")
// ------------------------------------------------------------------------
INCLUDE ~%MOD_FOLDER%/arrays/DeclareVoxArrays.tpa~
INCLUDE ~%MOD_FOLDER%/proprietary/CheckTlk.tpa~

// WRITE INTO DIALOG.TLK
// ---------------------
OUTER_FOR(index = 0; VARIABLE_IS_SET $~!_demoTexts~(~%index%~); ++index) 
BEGIN
	// Array elment values
	OUTER_SPRINT text 	$~!_demoTexts~(~%index%~)
	OUTER_SPRINT sound 	$~!_demoSounds~(~%index%~)
	
	ACTION_IF NOT(~%text%~ STRING_EQUAL ~!_NULL~) THEN
	BEGIN
		// Writes the text and sound into the dialog.tlk
		LAF RESOLVE_STR_REF_WITH_STRINGS
			STR_VAR
				voxText 	= ~%text%~
				voxSound	= ~%sound%~
			RET
				stringref = strRef
		END
		
		// Stores the string references to add them later into the specific 2DA file
		OUTER_SET 		~!_position~ 	= index
		OUTER_SET 		~!_maxSlots~ 	= slotNumbers
		OUTER_SPRINT 	~!_useArray~ 	~%TLKindexArray%~
		OUTER_SET 		~!_arrayValue~	= stringref
		LAM DYN_ARRAY_SET_VALUE
	END	
END

 
// TODO: DELETE IT
OUTER_FOR(index = 0; VARIABLE_IS_SET $~!_demoTexts~(~%index%~); ++index) 
BEGIN
		
	OUTER_TEXT_SPRINT 	test0 $~!_demoTexts~(~%index%~)
	OUTER_TEXT_SPRINT 	test1 $~!_demoSounds~(~%index%~)
	OUTER_TEXT_SPRINT 	test3 $~!_demoTLKindex~(~%index%~)
	OUTER_SET 			test4 = $~!_demoPositions~(~%index%~)
	PRINT ~%test0% %test1%: %test3% in Position: %test4%~
END

// WRITE INTO CHARSUND.2DA
// -----------------------
// Initializes the first vox soundslot 
OUTER_SPRINT InitName $~!_demoVoxNames~(0)
APPEND_COL_OUTER ~./%MOD_FOLDER%/CHARSUND.2DA~ "$ $ %InitName% -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1"
COPY ~./%MOD_FOLDER%/CHARSUND.2DA~ ~./%MOD_FOLDER%/temp/CHARSUND.2DA~
PRETTY_PRINT_2DA
// Initialize current number of columns in CHARSND.2DA
COUNT_2DA_COLS maxCols2DA
OUTER_SET maxCols = maxCols2DA - 1 

// Index for the names array
OUTER_SET nameIndex = 0 
OUTER_FOR(index = 0; VARIABLE_IS_SET $~!_demoTLKindex~(~%index%~); ++index) 
BEGIN
	// Array values
	OUTER_SPRINT 	name 		$~!_demoVoxNames~(~%nameIndex%~)
	OUTER_SPRINT 	sound 		$~!_demoSounds~(~%index%~)
	OUTER_SET 		position = 	$~!_demoPositions~(~%index%~)
	OUTER_SET  		reference= 	$~!_demoTLKindex~(~%index%~)

	// Checks if the name belongs to sound
	ACTION_IF ( INDEX (CASE_SENSITIVE EXACT_MATCH ~%name%~ ~%sound%~) != "-1" ) THEN
	BEGIN
		// Writes the string reference into the correct position
		COPY ~./%MOD_FOLDER%/temp/CHARSUND.2DA~ ~./%MOD_FOLDER%/temp/CHARSUND.2DA~
		// "row"---"column"---"required column count"---"value entry"
		SET_2DA_ENTRY ~%position%~ ~%maxCols%~ ~%maxCols%~ ~%reference%~

		PRINT ~%position% %maxCols% %maxCols% %reference%~
	END ELSE 
	BEGIN
		// Gets the new soundslot name
		OUTER_SET 		nameIndex = nameIndex + 1
		OUTER_SPRINT 	name $~!_demoVoxNames~(~%nameIndex%~)
		// Creates a new default column for the new soundslot name in CHARSND.2DA
		APPEND_COL_OUTER ~./%MOD_FOLDER%/temp/CHARSUND.2DA~ "$ $ %name% -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1"
		COPY ~./%MOD_FOLDER%/temp/CHARSUND.2DA~ ~./%MOD_FOLDER%/temp/CHARSUND.2DA~
		PRETTY_PRINT_2DA
		// Gets the curent number of columns in CHARSND.2DA
		COUNT_2DA_COLS maxCols2DA
		OUTER_SET maxCols = maxCols2DA - 1 

		// Writes the string reference into the correct position
		COPY ~./%MOD_FOLDER%/temp/CHARSUND.2DA~ ~./%MOD_FOLDER%/temp/CHARSUND.2DA~
		// "row"---"column"---"required column count"---"value entry"
		SET_2DA_ENTRY ~%position%~ ~%maxCols%~ ~%maxCols%~ ~%reference%~
		
		PRINT ~%position% %maxCols% %maxCols% %reference%~
	END
END// End of "FOR"


// TODO: Activate line???!
//COPY_EXISTING ~charsnd.2da~ ~override~ 


// TODO: DELETE ALL INLINED FILES! 
// CLEAR_EVERYTHING could works, alos the own written macro DYN_ARRAY_DELETE_BUFFER!
/*
OUTER_SPRINT ~!_deleteArray~ ~%refTextArray%~
LAM DYN_ARRAY_CLEANUP
OUTER_SPRINT ~!_deleteArray~ ~%refSoundArray%~
LAM DYN_ARRAY_CLEANUP
*/